scalar Date
scalar Url

type Query {
  webtoons: WebtoonConnection!
}

# type Mutation {
#   createCollection(input: Input): Collection
# }

# input Input {
#   title: String!
#   description: String!
#   webtoons: [Int!]!
# }

# type WebtoonResult {
#   webtoons: [Webtoon]
#   totalCounts: Int
# }

# input Pagination {
#   first: Int
#   take: Int
# }

# enum SortDirection {
#   ASCENDING
#   DESCENDING
# }

# enum SortableCollectionField {
#   created
# }

# type Sort {
#   sort: SortDirection
#   sortBy: SortableCollectionField
# }

# input Filter {
#   title: String
# }

enum Platform {
  NAVER
  DAUM
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type WebtoonEdge {
  # cursor: String!
  node: Webtoon
}

type WebtoonConnection {
  edges: [WebtoonEdge]
  # pageInfo: PageInfo!
  # totalCounts: Int!
}

type Webtoon {
  id: ID!
  title: String!
  description: String!
  platform: Platform!
  isFinish: Boolean!
  isAdult: Boolean!
  isPay: Boolean!
  thumbnail: Url!
  url: Url!
  authors: [Author!]
  genres: [Genre!]
  collections: [Collection]
}

type Author {
  id: ID!
  name: String!
  webtoons: [Webtoon!]!
}

type Genre {
  code: String!
  name: String!
  webtoons: [Webtoon!]!
}

type Collection {
  id: ID!
  title: String!
  description: String!
  webtoons: [Webtoon!]!
  createdAt: Date!
  updatedAt: Date
}
